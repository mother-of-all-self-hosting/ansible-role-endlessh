# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2024 Tiz
# SPDX-FileCopyrightText: 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://github.com/shizunge/endlessh-go

endlessh_enabled: true

endlessh_identifier: endlessh
endlessh_base_path: "/{{ endlessh_identifier }}"

# renovate: datasource=docker depName=shizunge/endlessh-go
endlessh_version: 2024.0119.1

endlessh_uid: ''
endlessh_gid: ''

# The hostname at which Endlessh is served.
endlessh_hostname: ''

# The path at which Endlessh is exposed.
# This value must either be `/` or not end with a slash (e.g. `/endlessh-go`).
endlessh_path_prefix: '/'

endlessh_container_image: "{{ endlessh_container_image_registry_prefix }}shizunge/endlessh-go:{{ endlessh_container_image_tag }}"
endlessh_container_image_tag: "{{ endlessh_version }}"
endlessh_container_image_registry_prefix: "{{ endlessh_container_image_registry_prefix_upstream }}"
endlessh_container_image_registry_prefix_upstream: "{{ endlessh_container_image_registry_prefix_upstream_default }}"
endlessh_container_image_registry_prefix_upstream_default: docker.io/
endlessh_container_image_force_pull: "{{ endlessh_container_image.endswith(':latest') }}"

# Controls whether the endlessh container exposes its HTTP port.
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:2112"), or empty string to not expose.
endlessh_container_host_bind_port: 22

# The base container network. It will be auto-created by this role if it doesn't exist already.
endlessh_container_network: '{{ endlessh_identifier }}'

# The port number in the container
endlessh_container_port: 2222

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to a reverse proxy, which runs in a different container network and influxdb.
endlessh_container_additional_networks: "{{ endlessh_container_additional_networks_auto + endlessh_container_additional_networks_custom }}"
endlessh_container_additional_networks_auto: []
endlessh_container_additional_networks_custom: []

# endlessh_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `endlessh_container_labels_additional_labels`.
endlessh_container_labels_traefik_enabled: false
endlessh_container_labels_traefik_docker_network: "{{ endlessh_container_network }}"
endlessh_container_labels_traefik_hostname: "{{ endlessh_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/endlessh`).
endlessh_container_labels_traefik_path_prefix: "{{ endlessh_path_prefix }}"
endlessh_container_labels_traefik_rule: "Host(`{{ endlessh_container_labels_traefik_hostname }}`){% if endlessh_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ endlessh_container_labels_traefik_path_prefix }}`){% endif %}"
endlessh_container_labels_traefik_priority: 0
endlessh_container_labels_traefik_entrypoints: web-secure
endlessh_container_labels_traefik_tls: "{{ endlessh_container_labels_traefik_entrypoints != 'web' }}"
endlessh_container_labels_traefik_tls_certResolver: default  # noqa var-naming
endlessh_container_labels_metrics_middleware_basic_auth_enabled: false
# See: https://doc.traefik.io/traefik/middlewares/http/basicauth/#users
endlessh_container_labels_metrics_middleware_basic_auth_users: ''

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `endlessh_container_labels_traefik_additional_response_headers_custom`
endlessh_container_labels_traefik_additional_request_headers: "{{ endlessh_container_labels_traefik_additional_request_headers_auto | combine(endlessh_container_labels_traefik_additional_request_headers_custom) }}"
endlessh_container_labels_traefik_additional_request_headers_auto: {}
endlessh_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `endlessh_container_labels_traefik_additional_response_headers_custom`
endlessh_container_labels_traefik_additional_response_headers: "{{ endlessh_container_labels_traefik_additional_response_headers_auto | combine(endlessh_container_labels_traefik_additional_response_headers_custom) }}"
endlessh_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': endlessh_http_header_xss_protection} if endlessh_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': endlessh_http_header_content_type_options} if endlessh_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': endlessh_http_header_content_security_policy} if endlessh_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': endlessh_http_header_content_permission_policy} if endlessh_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': endlessh_http_header_strict_transport_security} if endlessh_http_header_strict_transport_security and endlessh_container_labels_traefik_tls else {})
  }}
endlessh_container_labels_traefik_additional_response_headers_custom: {}

# endlessh_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# endlessh_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
endlessh_container_labels_additional_labels: ''

# A list of extra arguments to pass to the container (`docker run` command)
endlessh_container_extra_arguments: "{{ endlessh_container_extra_arguments_custom + endlessh_container_extra_arguments_auto }}"
endlessh_container_extra_arguments_custom: []
endlessh_container_extra_arguments_auto: []

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
endlessh_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
endlessh_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
endlessh_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
endlessh_http_header_content_permission_policy: "{{ 'interest-cohort=()' if endlessh_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
endlessh_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if endlessh_hsts_preload_enabled else '' }}"

# Controls whether to endlessh a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `endlessh_content_permission_policy`
endlessh_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `endlessh_http_header_strict_transport_security`
endlessh_hsts_preload_enabled: false

# List of systemd services that the Endlessh systemd service depends on
endlessh_systemd_required_services_list: "{{ endlessh_systemd_required_services_list_default + endlessh_systemd_required_services_list_auto + endlessh_systemd_required_services_list_custom }}"
endlessh_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
endlessh_systemd_required_services_list_auto: []
endlessh_systemd_required_services_list_custom: []

# endlessh_metrics_dashboard_urls contains a list of URLs with Grafana dashboard definitions.
# This role doesn't make use of this variable, but you can hook this into other roles.
endlessh_metrics_dashboard_urls:
  - "https://grafana.com/api/dashboards/15156/revisions/12/download"
